name: Python-app A01025258

on:
    push:
        branches: ['A01025258']

permissions:
    contents: read

jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up Python 3.10
              uses: actions/setup-python@v3
              with:
                python-version: '3.10'
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install flake8 pytest
                if [ -f py3/requirements.txt ]; then pip install -r py3/requirements.txt; fi
            - name: Lint with flake8
              run: |
                # Stop the build if there are Python syntax errors or undefined names
                flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    Test:
        runs-on: ubuntu-latest
        needs: Build
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up Python 3.10
              uses: actions/setup-python@v3
            - name: Install dependencies
              run: pip install -r py3/requirements.txt
            - name: Test with pytest
              run: |
                RUN_ENV=dev
                coverage run -m pytest py3/test/
                coverage report
                coverage html -d coverage_html/

    Package:
        runs-on: ubuntu-latest
        needs: Test
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Install dependencies
              run: pip install -r py3/requirements.txt
            - name: Package
              run: |
                RUN_ENV=dev
                zip app.zip py3/app/app.py  
                
    Dockerize:
        runs-on: ubuntu-latest
        needs: Package
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
              with:
                registry-type: public
            - name: Build and tag the image
              uses: docker/build-push-action@v4
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY: d0z3f1c0/demo-repository-ecr
                IMAGE_TAG: A01025258
              with:
                context: ./py3
                tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
                outputs: type=docker, dest=/tmp/${{ env.IMAGE_TAG }}.tar
            - name: Save Image
              uses: actions/upload-artifact@v3
              env:
                IMAGE_TAG: A01025258
              with:
                name: ${{ env.IMAGE_TAG }}
                path: /tmp/${{ env.IMAGE_TAG }}.tar